{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./handler.js","webpack:///./src/commonTypeDef.js","webpack:///./src/constants.js","webpack:///./src/db/config sync","webpack:///./src/db/config/database.js","webpack:///./src/db/models/task.js","webpack:///./src/entities/task/index.js","webpack:///./src/entities/task/resolvers.js","webpack:///./src/entities/task/typeDef.js","webpack:///external \"apollo-server-lambda\"","webpack:///external \"dotenv\"","webpack:///external \"fs\"","webpack:///external \"path\"","webpack:///external \"sequelize\"","webpack:///external \"source-map-support/register\""],"names":["require","config","schema","makeExecutableSchema","typeDefs","commonTypeDef","task","resolvers","resolverValidationOptions","requireResolversForResolveType","server","ApolloServer","formatError","err","newError","extensions","code","key","path","message","context","event","headers","functionName","sequelize","models","apiES7","callback","handler","createHandler","cors","origin","gql","TASK","STATUS","TODO","DONE","Sequelize","process","env","DB_NAME","DATABASE_USER","DATABASE_PASSWORD","host","DB_HOST","port","DB_PORT","logging","dialect","Task","join","DataTypes","define","id","type","UUID","defaultValue","UUIDV4","primaryKey","allowNull","summary","STRING","description","status","ENUM","constants","createdAt","DATE","updatedAt","Query","tasks","parent","args","console","log","findAll","order","limit","offset","Mutation","createTask","db","create","updateTask","findByPk","Error","update","deleteTask","destroy","typeDef"],"mappings":"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","file":"handler.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./handler.js\");\n","import { ApolloServer, makeExecutableSchema } from 'apollo-server-lambda'\nimport models, { sequelize } from './src/db/config/database'\n\nimport commonTypeDef from './src/commonTypeDef'\nimport * as task from './src/entities/task'\nrequire('dotenv').config()\n\nconst schema = makeExecutableSchema({\n  typeDefs: [\n    commonTypeDef,\n    task.typeDef\n  ],\n  resolvers: [\n    task.resolvers\n  ],\n  resolverValidationOptions: { requireResolversForResolveType: false }\n})\n\nconst server = new ApolloServer({\n  schema,\n  formatError: (err) => {\n    let newError = null\n\n    if (err.extensions.code === 'INTERNAL_SERVER_ERROR') {\n      newError = {\n        key: err.path,\n        message: err.message\n      }\n    }\n\n    return newError || err\n  },\n  context: async ({ event, context }) => {\n\n    return {\n      headers: event.headers,\n      functionName: context.functionName,\n      event,\n      context,\n      sequelize,\n      models\n    }\n  }\n\n})\n\nexport const apiES7 = (event, context, callback) => {\n  const handler = server.createHandler({\n    cors: {\n      origin: '*'\n    }\n  })\n\n  return handler(event, context, callback)\n}\n","const { gql } = require('apollo-server-lambda')\n\nconst commonTypeDef = gql`\n\nscalar DateTime\n\n  type Query{\n    _empty: String\n  }\n  type Mutation {\n    _empty: String\n  }\n`\n\nexport default commonTypeDef\n","export default {\n  TASK: {\n    STATUS: {\n      TODO: 'Todo',\n      DONE: 'Done'\n    }\n  }\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./src/db/config sync recursive\";","import Sequelize from 'sequelize'\nimport task from '../models/task'\n// import _ from 'lodash'\nimport path from 'path'\nimport fs from 'fs'\n\n      // this.sequelize = new this.Sequelize(process.env.DB_NAME, process.env.DB_USER, process.env.DB_PASSWORD, {\n      //   host: process.env.DB_HOST,\n      //   port: process.env.DB_PORT,\n      //   logging: false, // Disable the logging. It is consuming the time on lambda function.\n      //   dialect: 'postgresql',\n      //   dialectOptions: {\n      //     useUTC: false // for reading from database\n      //   },\n      //   // Use a different storage type. Default: sequelize\n      //   migrationStorage: 'json',\n\n      //   // Use a different file name. Default: sequelize-meta.json\n      //   migrationStoragePath: 'sequelizeMeta.json',\n\n      //   // Use a different table name. Default: SequelizeMeta\n      //   migrationStorageTableName: 'sequelize_meta'\n      // })\n\nconst sequelize = new Sequelize(\n  process.env.DB_NAME,\n  process.env.DATABASE_USER,\n  process.env.DATABASE_PASSWORD,\n  {\n    host: process.env.DB_HOST,\n    port: process.env.DB_PORT,\n    logging: false, // Disable the logging. It is consuming the time on lambda function.\n    dialect: 'postgres',\n  },\n);\n\nconst models = {\n  Task: require(path.join('src/db/models/task.js')(sequelize, Sequelize.DataTypes))\n}\n\n// Object.keys(models).forEach(key => {\n//   if ('associate' in models[key]) {\n//     models[key].associate(models);\n//   }\n// });\n\n      // models.forEach((modelName) => {\n        // const model = require(path.resolve(__dirname, `${modelName}.js`))(this.sequelize, Sequelize.DataTypes)\n\n      //   modelName = _.upperFirst(modelName)\n      //   this[modelName] = model\n      // })\n      // this.sequelize.sync({force: false});\n\n\nexport {sequelize}\nexport default models\n","import constants from '../../constants'\n\nconst task = (sequelize, DataTypes) => {\n  const Task = sequelize.define('Task', {\n    id: {\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4,\n      primaryKey: true,\n      allowNull: false\n    },\n    summary: {\n      type: DataTypes.STRING(500),\n      allowNull: false\n    },\n    description: {\n      type: DataTypes.STRING(500),\n      allowNull: true\n    },\n    status: {\n      type: DataTypes.ENUM([\n        constants.TASK.STATUS.TODO,\n        constants.TASK.STATUS.DONE\n      ]),\n      allowNull: false,\n      defaultValue: constants.TASK.STATUS.TODO\n    },\n    createdAt: DataTypes.DATE,\n    updatedAt: DataTypes.DATE\n  })\n\n  return Task\n}\n\nexport { task }\n","export { resolvers } from './resolvers'\nexport { typeDef } from './typeDef'\n","export const resolvers = {\n  Query: {\n    tasks: async (parent, args, context) => {\n\n      console.log(await context.models);\n      const tasks = await context.models.Task.findAll({\n        order: [['createdAt', 'desc']],\n        limit: args.limit,\n        offset: args.offset\n      })\n\n      return tasks\n    }\n  },\n  Mutation: {\n    createTask: async (parent, args, context) => {\n      const task = await context.db.Task.create(args)\n\n      return task\n    },\n\n    updateTask: async (parent, args, context) => {\n      const task = await context.db.Task.findByPk(args.id)\n\n      if (!task) {\n        return new Error('Task does not exist')\n      }\n\n      await task.update(args)\n      return task\n    },\n\n    deleteTask: async (parent, args, context) => {\n      const task = await context.db.Task.findByPk(args.id)\n\n      if (!task) {\n        return new Error('Task does not exist')\n      }\n\n      await task.destroy()\n      return true\n    }\n  }\n}\n","import { gql } from 'apollo-server-lambda'\n\nexport const typeDef = gql`\n  \n  type Task {\n    id: ID,\n    summary: String,\n    description: String,\n    status: StatusEnum\n    createdAt: DateTime,\n    updatedAt: DateTime\n  }\n\n  enum StatusEnum {\n    todo\n    done\n  }\n\n  extend type Mutation {\n    createTask (\n      summary: String!,\n      description: String,\n      status: StatusEnum\n    ): Task  \n\n    updateTask (\n      id: ID!,\n      status: StatusEnum!\n    ): Task\n\n    deleteTask (\n      id: ID!\n    ): Boolean\n  }\n\n  extend type Query {\n    tasks (limit: Int, offset: Int): [Task]\n  }\n  \n`\n","module.exports = require(\"apollo-server-lambda\");","module.exports = require(\"dotenv\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"sequelize\");","module.exports = require(\"source-map-support/register\");"],"sourceRoot":""}